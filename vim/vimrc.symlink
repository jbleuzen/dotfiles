" ----------------------------------------------------------------------------
" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
" ----------------------------------------------------------------------------
set nocompatible

" ----------------------------------------------------------------------------
"  Vundle configuration
" ----------------------------------------------------------------------------

filetype off 			" disable detection before vundle loads
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

source ~/.dotfiles/vim/bundles
filetype plugin indent on       " enable detection, plugins and indenting in one step


" Strip whitespace on save
"autocmd BufWritePre * :%s/\s\+$//e


" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set background=dark
set t_Co=256
syntax on
colorscheme molokai

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set lazyredraw             " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=1                   " command line height
set backspace=2            " allow backspacing over everything in insert mode
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling
set guicursor=a:blinkon0   " disable blinking cursor
set nowrap
set display=lastline	     " prevent the @ when lines are too long
set tabstop=2			         " Tabs width
set smartindent
set shiftwidth=2
set expandtab
set synmaxcol=0
set splitbelow				    " Open splits below
set splitright				    " Open splits on the right
set nofoldenable			    " Disable automatic fold
set paste
set hidden                " Can change buffer without save everytime

" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set hlsearch               " don't highlight searches
set visualbell             " shut the fuck up
set cursorline				     " highlight current line
set laststatus=2           " Always display the statusline in all windows
set noshowmode             " Hide the default mode text (e.g. -- INSERT -- below the statusline)

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
" ----------------------------------------------------------------------------
" Tweaks
" ----------------------------------------------------------------------------
" For reopening the file in root
cmap w!! w !sudo tee % >/dev/null

" ----------------------------------------------------------------------------
" Mappings
" ----------------------------------------------------------------------------

" Configure <Leader>
let mapleader = ","

" Escape is too far away
inoremap jj <Esc>

" Remap down/up for wrapping lines
nnoremap j gj
nnoremap k gk
xnoremap j gj
xnoremap k gk


" Learn "hkjl" the hard way !
nnoremap <Up> 		  <nop>
nnoremap <Down>		  <nop>
nnoremap <Left> 	  :bprevious <CR>
nnoremap <Right>	  :bnext<CR>
inoremap <Up>     	<nop>
inoremap <Down>   	<nop>
inoremap <Left>     :bprevious <CR>
inoremap <Right>		:bnext<CR>

" Moving line up/down (For french azerty Mac)
" Hackish mappings for ALT-J & ALT-K
noremap Ï :m+<CR>==
noremap È :m-2<CR>==
inoremap Ï <Esc>:m+<CR>==gi
inoremap È <Esc>:m-2<CR>==gi
vnoremap Ï :m'>+<CR>gv=gv
vnoremap È :m-2<CR>gv=gv

nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-l> :wincmd l<CR>

" This only work in Macvim because of :
" http://stackoverflow.com/questions/13072701/why-doesnt-this-vimrc-mapping-work-in-terminal-but-it-does-in-macvim-map-s
imap <S-Enter> <Esc>A<CR>

" Disabling <F1> because it's so close to <Esc>
inoremap <F1> <Esc>
noremap <F1> :call MapF1()<CR>

function! MapF1()
  if &buftype == "help"
    exec 'quit'
  else
    exec 'help'
  endif
endfunction

" Source vim config
nmap <F5> :so ~/.vimrc<CR>

" Toggle paste mode
set pastetoggle=<F12>
nmap <silent> <F12> :set paste!<BAR>:set paste?<CR>

" Easy create empty line
nmap <leader>o o<esc>
nmap <leader>O O<esc>


" Easy insert
nmap <leader>a ea
nmap <leader>i bi

" toggle `set list`
nmap <leader>l :set list!<CR>

" empty last search highlight
nmap <leader>/ :let @/ = ""<CR>

" toggle search result highlight
nmap <leader>; :set hlsearch!<CR>

" Insert ; at the end of the line if ; inserted then enter pressed
inoremap ;<CR> <C-o>A;

nmap <leader>gs :Gstatus<CR>
nmap <leader>gl :Glog<CR>

" close buffer
nmap <leader>w :bd<CR>
" new buffer
nmap <leader>n :enew<CR>

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif
" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" ----------------------------------------------------------------------------
" Backups
" ----------------------------------------------------------------------------

set nobackup
set nowb
set noswapfile


" ----------------------------------------------------------------------------
" Terminal
" ----------------------------------------------------------------------------

set mouse=a         		" enable mouse support in console "
set ttyfast					" Send more characters for redraws
" Set this to the name of your terminal that supports mouse codes.
" Must be one of: xterm, xterm2, netterm, dec, jsbterm, pterm
set ttymouse=xterm2


" ----------------------------------------------------------------------------
" MacVim
" ----------------------------------------------------------------------------

if has("gui_macvim")
  let macvim_hig_shift_movement = 1 "allow selection in insert mode
endif


" ----------------------------------------------------------------------------
" FileType configuration
" ----------------------------------------------------------------------------
au BufNewFile,BufRead *.sass set tabstop=4 shiftwidth=4 expandtab
au BufNewFile,BufRead *.json setfiletype json syntax=javascript

au BufRead,BufNewFile /etc/nginx/conf/*                      set ft=nginx
au BufRead,BufNewFile /etc/nginx/sites-available/*           set ft=nginx
au BufRead,BufNewFile /usr/local/etc/nginx/sites-available/* set ft=nginx
au BufRead,BufNewFile vhost.nginx                            set ft=nginx

au BufRead,BufNewFile Vagrantfile							 set ft=ruby

au BufRead,BufNewFile *.mustache							 set ft=html

au BufRead,BufNewFile *.twig                   set ft=jinja

" Force markdown filteype
au BufRead,BufNewFile *.md                     set ft=markdown
au BufRead,BufNewFile *.markdown               set ft=markdown

" Markdown rules
augroup WrapLineInTeXFile
  autocmd!
  autocmd FileType markdown setlocal wrap "wrap lines
augroup END

" ----------------------------------------------------------------------------
" Plugins configuration
" ----------------------------------------------------------------------------

" Emmet
let g:user_emmet_leader_key = '<c-e>'
let g:use_emmet_complete_tag = 1

" NERDTree
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let NERDTreeIgnore=['\.o$', '\~$', 'Icon', '_asset_bundler_cache$[[dir]]']
let g:NERDTreeWinSize = 30
nmap <leader>d :NERDTreeToggle<CR>
nmap <leader>n :NERDTreeFind<CR>

" Airline
let g:airline_theme = 'powerlineish'
let g:airline_powerline_fonts = 1
let g:airline_paste_symbol = 'PASTE'
let g:airline#extensions#tabline#enabled = 1 " Enable the list of buffers
let g:airline#extensions#tabline#fnamemod = ':t' " Show just the filename

" CTRLP
let g:ctrlp_custom_ignore = '\v[\/](\.git|node_modules|\.hg|\.svn|_site|\.png|\.jpg|\.gif|\.ico)$'
let g:ctrlp_match_window_bottom = 1
let g:ctrlp_match_window_reversed = 1
let g:ctrlp_max_height = 5

" html-indent
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_indent_autotags = "th,td,tr,tfoot,thead"
let g:html_indent_script1 = "auto"
let g:html_indent_style1 = "inc"

" javascript-indent
let g:SimpleJsIndenter_BriefMode = 1

" vim-indent-guide
let g:indentLine_char = '┆'
let g:indentLine_fileTypeExclude = ['nerdtree']
let g:indentLine_bufNameExclude = ['_.*', 'NERD_tree.*']
let g:indentLine_noConcealCursor = 'yes'

" sessions
let g:session_autoload = 'no'
let g:session_autosave = 'yes'
let g:session_directory = '~/.vimsessions'
